{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "86ddb86f",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-06T19:10:03.810278Z",
     "iopub.status.busy": "2024-07-06T19:10:03.809184Z",
     "iopub.status.idle": "2024-07-06T19:10:04.843903Z",
     "shell.execute_reply": "2024-07-06T19:10:04.842530Z"
    },
    "papermill": {
     "duration": 1.043952,
     "end_time": "2024-07-06T19:10:04.846667",
     "exception": false,
     "start_time": "2024-07-06T19:10:03.802715",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/titanic2/train.csv\n",
      "/kaggle/input/titanic2/test.csv\n",
      "/kaggle/input/titanic2/gender_submission.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e7cf4e27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-06T19:10:04.857645Z",
     "iopub.status.busy": "2024-07-06T19:10:04.857007Z",
     "iopub.status.idle": "2024-07-06T19:10:04.892839Z",
     "shell.execute_reply": "2024-07-06T19:10:04.891508Z"
    },
    "papermill": {
     "duration": 0.044409,
     "end_time": "2024-07-06T19:10:04.895660",
     "exception": false,
     "start_time": "2024-07-06T19:10:04.851251",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "train = pd.read_csv('/kaggle/input/titanic2/train.csv')\n",
    "test = pd.read_csv('/kaggle/input/titanic2/test.csv')\n",
    "gender = pd.read_csv('/kaggle/input/titanic2/gender_submission.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9f24cdd7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-06T19:10:04.906631Z",
     "iopub.status.busy": "2024-07-06T19:10:04.906222Z",
     "iopub.status.idle": "2024-07-06T19:10:04.929807Z",
     "shell.execute_reply": "2024-07-06T19:10:04.928580Z"
    },
    "papermill": {
     "duration": 0.032668,
     "end_time": "2024-07-06T19:10:04.932809",
     "exception": false,
     "start_time": "2024-07-06T19:10:04.900141",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "final_df = pd.concat([train,test]).sample(1309)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cc221f93",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-06T19:10:04.943336Z",
     "iopub.status.busy": "2024-07-06T19:10:04.942912Z",
     "iopub.status.idle": "2024-07-06T19:10:04.952986Z",
     "shell.execute_reply": "2024-07-06T19:10:04.951614Z"
    },
    "papermill": {
     "duration": 0.018376,
     "end_time": "2024-07-06T19:10:04.955614",
     "exception": false,
     "start_time": "2024-07-06T19:10:04.937238",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[30. 24. 54. 44. 18.  2. 41.  3. 49. 30. 18. 32. 30. 40. 24.  2. 27. 52.\n",
      " 15. 74. 42. 30. 31. 26. 24.]\n"
     ]
    }
   ],
   "source": [
    "pop = final_df['Age'].dropna()\n",
    "sample_age = pop.sample(25).values\n",
    "print(sample_age)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "19fe5a0f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-06T19:10:04.967014Z",
     "iopub.status.busy": "2024-07-06T19:10:04.966600Z",
     "iopub.status.idle": "2024-07-06T19:10:04.971499Z",
     "shell.execute_reply": "2024-07-06T19:10:04.970255Z"
    },
    "papermill": {
     "duration": 0.013881,
     "end_time": "2024-07-06T19:10:04.974087",
     "exception": false,
     "start_time": "2024-07-06T19:10:04.960206",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# H0 -> The mean age is 35\n",
    "# H1 -> The mean is less than 35"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2fee4579",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-06T19:10:04.984760Z",
     "iopub.status.busy": "2024-07-06T19:10:04.984344Z",
     "iopub.status.idle": "2024-07-06T19:10:06.176083Z",
     "shell.execute_reply": "2024-07-06T19:10:06.174996Z"
    },
    "papermill": {
     "duration": 1.200145,
     "end_time": "2024-07-06T19:10:06.178746",
     "exception": false,
     "start_time": "2024-07-06T19:10:04.978601",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ShapiroResult(statistic=0.9599397778511047, pvalue=0.4132770597934723)\n"
     ]
    }
   ],
   "source": [
    "# check for normality using Shapiro Wilk test\n",
    "from scipy.stats import shapiro\n",
    "\n",
    "shapiro_age = shapiro(sample_age)\n",
    "\n",
    "print(shapiro_age)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "cacf123d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-06T19:10:06.190022Z",
     "iopub.status.busy": "2024-07-06T19:10:06.189606Z",
     "iopub.status.idle": "2024-07-06T19:10:06.194833Z",
     "shell.execute_reply": "2024-07-06T19:10:06.193468Z"
    },
    "papermill": {
     "duration": 0.014169,
     "end_time": "2024-07-06T19:10:06.197618",
     "exception": false,
     "start_time": "2024-07-06T19:10:06.183449",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "pop_mean = 35\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f4a37085",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-06T19:10:06.208432Z",
     "iopub.status.busy": "2024-07-06T19:10:06.208039Z",
     "iopub.status.idle": "2024-07-06T19:10:06.220692Z",
     "shell.execute_reply": "2024-07-06T19:10:06.219593Z"
    },
    "papermill": {
     "duration": 0.02122,
     "end_time": "2024-07-06T19:10:06.223426",
     "exception": false,
     "start_time": "2024-07-06T19:10:06.202206",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "t-statistic: -1.3367321863745294\n",
      "p-value: 0.09692226591647599\n"
     ]
    }
   ],
   "source": [
    "import scipy.stats as stats\n",
    "\n",
    "t_statistic, p_value = stats.ttest_1samp(sample_age, pop_mean)\n",
    "\n",
    "print(\"t-statistic:\", t_statistic)\n",
    "print(\"p-value:\", p_value/2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "1221ff44",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-06T19:10:06.234137Z",
     "iopub.status.busy": "2024-07-06T19:10:06.233730Z",
     "iopub.status.idle": "2024-07-06T19:10:06.239861Z",
     "shell.execute_reply": "2024-07-06T19:10:06.238708Z"
    },
    "papermill": {
     "duration": 0.014983,
     "end_time": "2024-07-06T19:10:06.242974",
     "exception": false,
     "start_time": "2024-07-06T19:10:06.227991",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fail to reject the null hypothesis.\n"
     ]
    }
   ],
   "source": [
    "alpha = 0.05\n",
    "\n",
    "if p_value < alpha:\n",
    "    print(\"Reject the null hypothesis.\")\n",
    "else:\n",
    "    print(\"Fail to reject the null hypothesis.\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5041831,
     "sourceId": 8458659,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6.356927,
   "end_time": "2024-07-06T19:10:06.869435",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-06T19:10:00.512508",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
